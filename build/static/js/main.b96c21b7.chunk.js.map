{"version":3,"sources":["api.js","Search.js","SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["search","query","a","qs","fetch","res","ok","Error","status","json","Search","onChange","SearchInput","placeholder","width","autoFocus","value","SearchResults","useState","results","setResults","useEffect","length","then","data","catch","err","console","log","Row","map","result","Col","xs","md","lg","Card","Img","variant","src","image_id","alt","thumnail","alt_text","Body","Title","title","id","App","setQuery","className","Navbar","bg","Brand","Jumbotron","fluid","Container","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAaA,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,2GAEdC,EAFc,aAEHF,EAFG,wDAGFG,MAHE,+CAGaD,GAHb,WAGdE,EAHc,QAKXC,GALW,sBAMZ,IAAIC,MAAJ,wCAA2CF,EAAIG,OAA/C,MANY,gCAQbH,EAAII,QARS,2CAAH,sD,gBCEJ,SAASC,EAAT,GAAsC,IAApBT,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACtC,OACE,cAACC,EAAA,EAAD,CACEC,YAAY,gBACZC,MAAM,OACNC,WAAS,EACTC,MAAOf,EACPU,SAAUA,I,+BCJD,SAASM,EAAT,GAAmC,IAAVhB,EAAS,EAATA,MAAS,EACjBiB,mBAAS,MADQ,mBACxCC,EADwC,KAC/BC,EAD+B,KAsB/C,OAnBAC,qBAAU,WACFpB,GAASA,EAAMqB,OAKjBrB,EAAMqB,OAAS,GAInBtB,EAAOC,GACJsB,MAAK,SAACJ,GACDA,GAAWA,EAAQK,MACrBJ,EAAWD,EAAQK,SAGtBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAd5BN,EAAW,QAeZ,CAACnB,IAECkB,EAIiB,GAAlBA,EAAQG,OACH,6CAETK,QAAQC,IAAI,qBAEV,cAACC,EAAA,EAAD,UACGV,EAAQW,KAAI,SAACC,GAAD,aACX,cAACC,EAAA,EAAD,CAAqBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxC,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CACEC,QAAQ,MACRC,IAAG,uCAAkCR,EAAOS,SAAzC,4BACHC,IAAG,UAAEV,EAAOW,gBAAT,aAAE,EAAiBC,WAExB,cAACP,EAAA,EAAKQ,KAAN,UACE,cAACR,EAAA,EAAKS,MAAN,UAAad,EAAOe,cARhBf,EAAOgB,UAVd,K,cCMIC,MAxBf,WAAgB,IAAD,EACa9B,mBAAS,IADtB,mBACNjB,EADM,KACCgD,EADD,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,mCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOd,QAAQ,OAA1B,SACE,cAACa,EAAA,EAAOE,MAAR,sBAEF,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACL,UAAU,sBAA3B,SACE,eAACM,EAAA,EAAD,WACE,wDACA,cAAC9C,EAAD,CAAQT,MAAOA,EAAOU,SAAU,SAAC8C,GAAD,OAAOR,EAASQ,EAAEC,OAAO1C,kBAI/D,+BACE,cAACwC,EAAA,EAAD,CAAWD,OAAK,EAAhB,SACE,cAACtC,EAAD,CAAehB,MAAOA,YCfjB0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b96c21b7.chunk.js","sourcesContent":["export const search = async (query) => {\n  const apiUrl = `https://api.artic.edu/api/v1/artworks/search`;\n  const qs = `?q=${query}&limit=30&fields=id,title,image_id,thumnail`;\n  const res = await fetch(apiUrl + qs);\n  // same as fetch(apiUrl).then(res => ...).catch\n  if (!res.ok) {\n    throw new Error(`error loading search results {${res.status}}`);\n  }\n  return res.json();\n};\n","import { SearchInput } from \"evergreen-ui\";\n\nexport default function Search({ query, onChange }) {\n  return (\n    <SearchInput\n      placeholder=\"Edward Hopper\"\n      width=\"100%\"\n      autoFocus\n      value={query}\n      onChange={onChange}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { search } from \"./api\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nexport default function SearchResults({ query }) {\n  const [results, setResults] = useState(null);\n\n  useEffect(() => {\n    if (!(query || query.length)) {\n      setResults(null);\n      return;\n    }\n\n    if (query.length < 3) {\n      return;\n    }\n\n    search(query)\n      .then((results) => {\n        if (results && results.data) {\n          setResults(results.data);\n        }\n      })\n      .catch((err) => console.log(err));\n  }, [query]);\n\n  if (!results) {\n    return null;\n  }\n\n  if (results.length == 0) {\n    return <p>No results.</p>;\n  }\n  console.log(\"search Results.js\");\n  return (\n    <Row>\n      {results.map((result) => (\n        <Col key={result.id} xs={12} md={4} lg={3}>\n          <Card>\n            <Card.Img\n              variant=\"top\"\n              src={`https://www.artic.edu/iiif/2/${result.image_id}/full/843,/0/default.jpg`}\n              alt={result.thumnail?.alt_text}\n            />\n            <Card.Body>\n              <Card.Title>{result.title}</Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Container, Jumbotron, Navbar } from \"react-bootstrap\";\n\nimport { search } from \"./api\";\nimport Search from \"./Search\";\nimport SearchResults from \"./SearchResults\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Artsy</Navbar.Brand>\n        </Navbar>\n        <Jumbotron fluid className=\"painting-background\">\n          <Container>\n            <h1>Find That Art You Love</h1>\n            <Search query={query} onChange={(e) => setQuery(e.target.value)} />\n          </Container>\n        </Jumbotron>\n      </header>\n      <main>\n        <Container fluid>\n          <SearchResults query={query} />\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}